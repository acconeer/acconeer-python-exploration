[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "acconeer-exptool"
description = "Acconeer Exploration Tool"
dynamic = ["version"]
readme = "README.md"
license = "BSD-3-Clause-Clear"
requires-python = ">=3.8"
authors = [
    { name = "Acconeer AB", email = "tools@acconeer.com" },
]
classifiers = [
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "attrs>=22.1.0",
    "cbor2",
    "h5py>=3.8,<4",
    "numpy>=1.20,<2",
    "pandas>=1.3.5",
    "packaging",
    "pyserial>=3.5",
    "pyusb>=1.2.1",
    "pyyaml",
    "requests>=2.0,<3",
    "result==0.16.1",
    "typing-extensions>=4,<5",
    "textual==0.1.18",
    "XlsxWriter>=3.1.9",
    "exceptiongroup==1.1.1",
    "attributes-doc==0.3.0",
]

[project.urls]
Documentation = "https://docs.acconeer.com"
Homepage = "https://github.com/acconeer/acconeer-python-exploration"
Source = "https://github.com/acconeer/acconeer-python-exploration"
Tracker = "https://github.com/acconeer/acconeer-python-exploration/issues"

[project.optional-dependencies]
algo = [
    "scipy",
]
app = [
    "acconeer-exptool[algo]",
    "bs4",
    "docutils>=0.17,!=0.18",
    "matplotlib>3.5.1",
    "platformdirs",
    "psutil",
    "pyperclip",
    "pyside6!=6.3.0,!=6.3.2,!=6.5.*",
    "pyqtdarktheme",
    "pyqtgraph>=0.12.4",
    "qtawesome",
    "qtpy>=2.3.0",
]
docs = [
    "acconeer-exptool[algo]",
    "docutils>=0.17,!=0.18",
    "myst-parser>=2.0.0",
    "sphinx>=7.2.6",
    "sphinx-design",
    "sphinxext-rediraffe",
    "sphinx-notfound-page>=1.0.0",
    "sphinx-book-theme==1.1.2",
    "sphinx-tabs",
    "sphinxcontrib-youtube",
    "sphinxcontrib-spelling",
]

[tool.hatch.build.targets.wheel]
packages = [
    "src/acconeer",
]

[tool.hatch.build.targets.sdist]
include = [
    "src/acconeer",
]

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "src/acconeer/exptool/_version.py"


[tool.hatch.envs.app]
features = ["app"]

[tool.hatch.envs.app.scripts]
launcher = "python -m acconeer.exptool.app {args}"
new = "python -m acconeer.exptool.app.new {args}"
old = "python -m acconeer.exptool.app.old {args}"


[tool.hatch.envs.mypy]
features = ["app"]
dependencies = [
    "mypy==1.7.0",
    "pytest==7.2",
    "pandas==1.3.5",
    "pandas-stubs",
    "PySide6==6.6.2",
]

[[tool.hatch.envs.mypy.matrix]]
python = ["3.8"]

[tool.hatch.envs.mypy.scripts]
check = "python -m mypy {args}"


[tool.hatch.envs.hatch-test]
# This is the environment for "hatch test"
features = ["app"]
extra-args = ["--doctest-modules"]
extra-dependencies = [
    "pandas>=1.3.5",
    "dirty-equals==0.5.0",
]

[[tool.hatch.envs.hatch-test.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]

[tool.hatch.envs.hatch-test.scripts]
run = "pytest{env:HATCH_TEST_ARGS:} {args}"  # default
run-cov = "coverage run -m pytest{env:HATCH_TEST_ARGS:} {args}"  # default
cov-combine = "coverage combine"  # default
cov-report = "coverage report"  # default


[tool.hatch.envs.docs]
features = ["docs"]
dependencies = ["sphinx_autobuild"]

[tool.hatch.envs.docs.scripts]
clean = "rm -rf docs/_build"
autobuild = [
    "clean",
    "python -m sphinx_autobuild -t internal -b html docs docs/_build --watch src",
]
html = "python -m sphinx -W -b html docs docs/_build"
linkcheck = "python -m sphinx -W -b linkcheck docs docs/_build"
spelling = "python -m sphinx -W -b spelling docs docs/_build"
latexpdf = "python -m sphinx -M latexpdf docs docs/_build"
rediraffe-write = "python -m sphinx -b rediraffewritediff docs docs/_build"
rediraffe-check = "python -m sphinx -b rediraffecheckdiff docs docs/_build"
build = ["clean", "html", "latexpdf", "linkcheck", "spelling", "rediraffe-check"]

[tool.hatch.envs.hatch-static-analysis]
# This is the environment for "hatch fmt"
config-path = "none"
dependencies = [
    "ruff==0.1.6",
    "packaging",
    'tomli; python_version < "3.11"',
]

[tool.hatch.envs.hatch-static-analysis.scripts]
format-check = [
    "python -m ruff format --diff .",
    "python docs/generate_example_script_pages.py check",
]
format-fix = [
    "python -m ruff format .",
    "python docs/generate_example_script_pages.py generate",
]
lint-check = [
    "python tools/check_permissions.py",
    "python tools/check_whitespace.py",
    "python tools/check_line_length.py",
    "python tools/check_sdk_mentions.py",
    "python tools/check_changelog.py",
    "python tools/check_copyright.py",
    "python -m ruff .",
]
lint-fix = [
    "python tools/check_copyright.py --update-year",
    "python -m ruff --fix .",
    "lint-check"
]

[tool.ruff]
line-length = 99
target-version = "py38"

show-fixes = true
show-source = true

src = ["src", "tests"]
namespace-packages = ["src/acconeer"]

[tool.ruff.lint]
# "extend" here adds to the ruff defaults, rather than replacing.
# Q = flake8-quotes, TID = flake8-tidy-imports, I = isort, FA = flake8-future-annotations
extend-select = ["Q", "TID", "I", "FA"]
# E741 = Ambiguous variable names, e.g. I vs l
# E501 = "line too long". Handled by black.
extend-ignore = ["E741", "E501"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401", "E402"]
"src/acconeer/exptool/_winusbcdc/*" = ["F40", "E501"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "parents"

[tool.ruff.isort]
lines-after-imports = 2

known-third-party = [
    "numpy",
    "scipy",
    "serial",
    "matplotlib",
    "h5py",
    "flask",
    "yaml",
    "attr",
    "docutils",
    "keras",
    "sklearn",
    "tensorflow",
    "pytest",
    "requests",
    "packaging",
    "attrs",
    "typing_extensions",
    "qdarktheme",
    "qtawesome",
    "pyperclip",
    "psutil",
]
section-order = [
    "future",
    "standard-library",
    "third-party",
    "PySide6",
    "pyqtgraph",
    "acconeer",
    "first-party",
    "local-folder",
]

[tool.ruff.isort.sections]
"PySide6" = ["PySide6"]
"pyqtgraph" = ["pyqtgraph"]
"acconeer" = ["acconeer"]

[tool.mypy]
packages = [
    "acconeer.exptool._core",
    "acconeer.exptool.a121",
    "acconeer.exptool.app.new",
    "acconeer.exptool.flash._mcumgruart",
    "acconeer.exptool.setup",
    "acconeer.exptool.opser",
    "utils.convert_h5",
    "tests.unit.a121",
    "tests.app",
]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
no_implicit_optional = true

warn_return_any = true
warn_unused_ignores = true

incremental = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "attributes_doc.*",
    "cbor2.*",
    "dirty_equals.*",
    "h5py.*",
    "platformdirs.*",
    "psutil.*",
    "pyperclip.*",
    "pyqtgraph.*",
    "pytest.*",
    "qdarktheme.*",
    "qtawesome.*",
    "requests.*",
    "scipy.*",
    "serial.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = "--ignore=src/acconeer/exptool/_winusbcdc --ignore=src/acconeer/exptool/a111 --ignore=tests/gui"
doctest_optionflags = [
    "ELLIPSIS",
    "NORMALIZE_WHITESPACE",
]

[tool.check_line_length]
line_length = 80
include = [
    "LICENSE.md",
    "CHANGELOG.md",
]

[tool.check_sdk_mentions]
ignore_lines = []
include = [
    "README.md",
    "docs/**/*.rst",
    "Jenkinsfile",
    "src/acconeer/exptool/app/new/ui/resource_tab/*.py",
]

[tool.check_copyright]
ignore_files = [
    "src/acconeer/exptool/_winusbcdc/*",
]
docs_conf_file = "docs/conf.py"
